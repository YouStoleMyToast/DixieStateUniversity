<Window x:Class="SudokuFX.Window1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:clr="clr-namespace:SudokuFX"
	Loaded="WindowLoaded" 
    Title="SudokuFX" Width="800" Height="700" 
	  >
  <Window.Resources>
    <Storyboard x:Key ="TimerAnimation" Completed ="TimerDone">
      <DoubleAnimation From ="0" To ="1" Storyboard.TargetName ="StopwatchControl"  Duration="0:2:0" Storyboard.TargetProperty ="CurrentTime"/>
      <Int32Animation From ="1" To ="0"  Storyboard.TargetName ="MinNumber" Storyboard.TargetProperty ="Tag" Duration ="0:2:0"/>
      <Int32Animation From ="59" To ="0" RepeatBehavior="Forever" Storyboard.TargetName ="SecNumber" Storyboard.TargetProperty ="Tag" Duration ="0:1:0"/>
      <Int32Animation From ="59" To ="0" RepeatBehavior="Forever" Storyboard.TargetName ="SubSecNumber" Storyboard.TargetProperty ="Tag" Duration ="0:0:1"/>
    </Storyboard>
  </Window.Resources>
  <Grid>
    <DockPanel Style ="{StaticResource GradientPanel}">
      <Grid DockPanel.Dock ="Top" Margin="10,0,0,25">
        <Grid.RenderTransform>
          <TranslateTransform X="800"/>
        </Grid.RenderTransform>
        <Grid.Triggers>
          <EventTrigger RoutedEvent ="Control.Loaded">
            <EventTrigger.Actions>
              <BeginStoryboard>
                <Storyboard>
                  <DoubleAnimationUsingKeyFrames  BeginTime ="0:0:0.25" Storyboard.TargetProperty="RenderTransform.X"  AccelerationRatio="0.25">
                    <LinearDoubleKeyFrame Value="800" KeyTime="0:0:0"/>
                    <LinearDoubleKeyFrame Value="-30" KeyTime="0:0:0.3"/>
                    <LinearDoubleKeyFrame Value="20" KeyTime="0:0:0.5"/>
                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.6"/>
                  </DoubleAnimationUsingKeyFrames>
                </Storyboard>
              </BeginStoryboard>
            </EventTrigger.Actions>
          </EventTrigger>
        </Grid.Triggers>
        <TextBlock Background ="#00112233" x:Name ="TitleText" VerticalAlignment="Top" HorizontalAlignment="Left" Foreground ="White" FontSize ="36" Text ="SudokuFX">
        </TextBlock>
        <Rectangle VerticalAlignment ="Top" HorizontalAlignment ="Left" x:Name ="TitleReflect"  Width ="{Binding ElementName=TitleText,Path=ActualWidth}" Height ="{Binding ElementName=TitleText,Path=ActualHeight}">
          <Rectangle.RenderTransform>
            <TransformGroup>
              <ScaleTransform CenterY="{Binding ElementName=TitleText,Path=ActualHeight}" ScaleY ="-1"/>
              <TranslateTransform Y ="-10"/>
            </TransformGroup>
          </Rectangle.RenderTransform>
          <Rectangle.OpacityMask>
            <LinearGradientBrush StartPoint ="0,0" EndPoint ="0,1">
              <GradientStop Color ="#00112233" Offset ="0.3"/>
              <GradientStop Color ="#a0112233" Offset ="1"/>
            </LinearGradientBrush>
          </Rectangle.OpacityMask>
        </Rectangle>
      </Grid>
      <Expander  IsExpanded ="True" DockPanel.Dock="Bottom"  Header="Solver Plug-ins">
        <DockPanel Height="120">
          <DockPanel Margin="0,0,5,0" DockPanel.Dock="Left">
            <DockPanel.Resources>
              <DataTemplate x:Key="SolverListItemTemplate">
                <TextBlock Text="{Binding Path=Name}"/>
              </DataTemplate>
            </DockPanel.Resources>
            <Button x:Name="BenchButton" Click="BenchmarkClick" Margin="0,5,0,0" DockPanel.Dock="Bottom">Benchmark!</Button>
            <ListBox SelectionChanged="PluginListSelectionChanged" ItemContainerStyle="{StaticResource CheckedListBoxItem}" SelectionMode="Single" 
									x:Name="SolverList" Background="#60FFFFFF" Width ="140" ItemTemplate="{StaticResource SolverListItemTemplate}"/>
          </DockPanel>
          <Grid DockPanel.Dock="Right" Margin="5,0,0,0" Width="120">
            <StackPanel Visibility="Visible" x:Name="InfoPanel"   DataContext="{Binding ElementName=SolverList, Path=SelectedItem}">
              <TextBlock Foreground="Black" Text="Solver Info:" FontWeight="Bold" FontSize="12"/>
              <TextBlock  FontSize="8" Text=" "/>
              <TextBlock Foreground="Black" Text="{Binding Path=Name}"/>
              <TextBlock Foreground="Black" Text="{Binding Path=Author}"/>
              <TextBlock  FontSize="8" Text=" "/>
              <TextBlock Foreground="Black" Text="{Binding Path=Description}" HorizontalAlignment="Stretch" TextWrapping="WrapWithOverflow"/>
            </StackPanel>
            <StackPanel   Visibility="Hidden" VerticalAlignment="Center" x:Name="WaitPanel">
              <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Width="80" Height="20">
                <Rectangle StrokeThickness="1" Stroke ="DarkBlue"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                  <Rectangle.Fill>
                    <LinearGradientBrush StartPoint ="0,0" EndPoint ="0,1">
                      <GradientStop Color ="LightSkyBlue" Offset ="0"/>
                      <GradientStop Color ="Blue" Offset ="0.5"/>
                      <GradientStop Color ="LightSkyBlue" Offset ="1"/>
                    </LinearGradientBrush>
                  </Rectangle.Fill>
                </Rectangle>
                <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                  <Rectangle.Fill>
                    <LinearGradientBrush Opacity ="0.6" StartPoint ="0,0" EndPoint ="0,1">
                      <GradientStop Color ="White" Offset ="0"/>
                      <GradientStop Color ="#CCFFFFFF" Offset ="0.5"/>
                      <GradientStop Color ="Transparent" Offset ="0.51"/>
                    </LinearGradientBrush>
                  </Rectangle.Fill>
                </Rectangle>
                <Rectangle Stroke="Transparent" StrokeThickness="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                  <Rectangle.Fill>
                    <LinearGradientBrush SpreadMethod="Reflect" Opacity ="0.4" StartPoint ="0,0" EndPoint ="0.5,0">
                      <GradientStop Color ="White" Offset ="0"/>
                      <GradientStop Color ="White" Offset ="0.2"/>
                      <GradientStop Color ="Transparent" Offset ="0.8"/>
                      <GradientStop Color ="Transparent" Offset ="1"/>
                      <LinearGradientBrush.RelativeTransform>
                        <TranslateTransform X="0" Y="0"/>
                      </LinearGradientBrush.RelativeTransform>
                    </LinearGradientBrush>
                  </Rectangle.Fill>
                  <Rectangle.Triggers>
                    <EventTrigger RoutedEvent="Rectangle.Loaded">
                      <EventTrigger.Actions>
                        <BeginStoryboard>
                          <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Fill.RelativeTransform.X" From="0" To="1" Duration="0:0:4" RepeatBehavior="Forever"/>
                          </Storyboard>
                        </BeginStoryboard>
                      </EventTrigger.Actions>
                    </EventTrigger>
                  </Rectangle.Triggers>
                </Rectangle>
              </Grid>
              <TextBlock Margin="5" DockPanel.Dock="Bottom" Foreground="Black" FontSize="14" FontWeight="Bold" HorizontalAlignment="Center">Working...</TextBlock>
            </StackPanel>
          </Grid>
          <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <clr:GraphControl VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="Graph"/>
            <Button Click="ClearGraphClicked"  OverridesDefaultStyle="True"  Width="14" Height="14" Margin="2"    VerticalAlignment="Top" HorizontalAlignment="Right" Foreground="Black" Content="x">
              <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                  <Border x:Name="Back" CornerRadius="1" BorderBrush="Transparent" Background ="#00FFFFFF">
                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter TargetName="Back" Property="Background">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="WhiteSmoke" Offset="0"/>
                            <GradientStop Color="LightGray" Offset="1"/>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                    </Trigger>
                    <Trigger Property="IsPressed"  Value="True">
                      <Setter TargetName="Back" Property="Background">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="WhiteSmoke" Offset="1"/>
                            <GradientStop Color="LightGray" Offset="0"/>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Button.Template>
            </Button>
          </Grid>
        </DockPanel>
      </Expander>
      <StackPanel x:Name ="DockLeft" DockPanel.Dock ="Left">
        <Expander  IsExpanded ="True"  Header="Main Menu">
          <StackPanel>
            <Button Click="NewGameClicked">New Game</Button>
            <Button Click="LoadGameClicked">Load Game</Button>
            <Button Click="SaveGameClicked">Save Game</Button>
            <Button Click="QuitClicked">Quit</Button>
          </StackPanel>
        </Expander>
        <Expander IsExpanded ="True" Header ="New Game Settings">
          <StackPanel>
            <StackPanel.Resources>
              <DataTemplate x:Key ="BoardSizeTemplate">
                <StackPanel Orientation ="Horizontal" FlowDirection ="LeftToRight">
                  <TextBlock Text ="{Binding}"/>
                  <TextBlock Text ="x"/>
                  <TextBlock Text ="{Binding}"/>
                </StackPanel>
              </DataTemplate>
            </StackPanel.Resources>
            <TextBlock Foreground="Black">Generation Method:</TextBlock>
            <StackPanel Margin ="10,5,5,5">
              <RadioButton IsChecked ="True" x:Name ="FastGenRadio">Fast But Incorrect</RadioButton>
              <RadioButton x:Name ="SolverGenRadio" >Using Solver</RadioButton>
            </StackPanel>
            <TextBlock Foreground="Black">Timer Dificulty:</TextBlock>
            <StackPanel Margin ="10,5,5,5">
              <RadioButton x:Name="NoTimerRadio">No Timer</RadioButton>
              <RadioButton x:Name="EasyTimerRadio" IsChecked ="True">Easy</RadioButton>
              <RadioButton x:Name="MediumTimerRadio">Medium</RadioButton>
              <RadioButton x:Name="HardTimerRadio">Hard</RadioButton>
            </StackPanel>
            <TextBlock Foreground="Black">Board Size:</TextBlock>
            <ComboBox x:Name ="BoardSize" xmlns:s="clr-namespace:System;assembly=mscorlib" ItemTemplate ="{StaticResource BoardSizeTemplate}" IsEditable ="False">
              <ComboBox.SelectedItem>
                <s:Int32>9</s:Int32>
              </ComboBox.SelectedItem>
              <s:Int32>9</s:Int32>
              <s:Int32>16</s:Int32>
              <s:Int32>25</s:Int32>
              <s:Int32>36</s:Int32>
            </ComboBox>
          </StackPanel>
        </Expander>
      </StackPanel>
      <StackPanel x:Name ="DockRight" Width ="{Binding ElementName=DockLeft, Path=ActualWidth}" DockPanel.Dock ="Right">
        <Expander IsExpanded ="True" Header ="Current Game">
          <StackPanel xmlns:s="clr-namespace:System;assembly=mscorlib">
            <StackPanel x:Name="TimerControls">
              <StackPanel Orientation ="Horizontal" FlowDirection ="LeftToRight">
                <TextBlock  x:Name ="MinNumber" FontSize ="36" FontWeight ="Bold" Text ="{Binding RelativeSource={RelativeSource Self},Path=Tag}">
                  <TextBlock.Tag>
                    <s:Int32>59</s:Int32>
                  </TextBlock.Tag>
                </TextBlock>
                <TextBlock  FontSize="36" FontWeight="Bold" Text =":"/>
                <TextBlock  x:Name ="SecNumber" FontSize ="36" FontWeight="Bold" Text ="{Binding RelativeSource={RelativeSource Self},Path=Tag}">
                  <TextBlock.Tag>
                    <s:Int32>59</s:Int32>
                  </TextBlock.Tag>
                </TextBlock>
                <TextBlock Margin="0,5,0,0" VerticalAlignment="Center"  FontSize="24" FontWeight="Bold" Text =":"/>
                <TextBlock Margin="0,5,0,0" VerticalAlignment="Center" x:Name ="SubSecNumber" FontSize ="24" Text ="{Binding RelativeSource={RelativeSource Self},Path=Tag}">
                  <TextBlock.Tag>
                    <s:Int32>59</s:Int32>
                  </TextBlock.Tag>
                </TextBlock>
              </StackPanel>
              <clr:Stopwatch Checked="ResumeTimer" Unchecked="PauseTimer"   Margin="0,5,0,0"  x:Name="StopwatchControl"  HorizontalAlignment="Stretch"/>
            </StackPanel>
            <Button x:Name="SolveButton" Click="SolveClicked">I Give Up</Button>
          </StackPanel>
        </Expander>
      </StackPanel>
      <Grid>
        <Rectangle Height="{Binding ElementName=Board, Path=ActualHeight}" Width="{Binding ElementName=Board, Path=ActualWidth}" Margin="9" Fill ="White">
          <Rectangle.BitmapEffect>
            <DropShadowBitmapEffect Opacity ="0.5"/>
          </Rectangle.BitmapEffect>
        </Rectangle>
        <clr:SudokuBoard x:Name="Board"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   Margin="5"/>
      </Grid>
    </DockPanel>
    <Grid IsHitTestVisible="False" IsEnabled="False" x:Name="MessageLayer" Opacity="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#B0000000">
      <Grid.Style>
        <Style>
          <Style.Triggers>
            <Trigger Property="Grid.IsEnabled" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation To="1" Storyboard.TargetProperty="Opacity" Duration="0:0:0.25"/>
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" BeginTime="0:0:0.25">
                      <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                    </BooleanAnimationUsingKeyFrames>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation To="0" Storyboard.TargetProperty="Opacity" Duration="0:0:0.25"/>
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" BeginTime="0:0:0.25">
                      <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                    </BooleanAnimationUsingKeyFrames>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </Style.Triggers>
        </Style>
      </Grid.Style>
      <Expander x:Name="MessageExpander" HorizontalAlignment="Center" VerticalAlignment="Center" IsExpanded="True" Header="Message">
        <DockPanel Margin="0,15,0,0" MinWidth="300"  MinHeight="125" >
          <Grid VerticalAlignment="Top" Width="56" Height="56" DockPanel.Dock="Left">
            <Ellipse x:Name ="BackGrad" HorizontalAlignment="Stretch" VerticalAlignment ="Stretch" StrokeThickness="2" Stroke ="DarkBlue">
              <Ellipse.Fill>
                <LinearGradientBrush StartPoint ="0,0" EndPoint ="0,1">
                  <GradientStop Color ="LightSkyBlue" Offset ="0"/>
                  <GradientStop Color ="Blue" Offset ="0.5"/>
                  <GradientStop Color ="LightSkyBlue" Offset ="1"/>
                </LinearGradientBrush>
              </Ellipse.Fill>
            </Ellipse>
            <TextBlock  HorizontalAlignment="Stretch" VerticalAlignment ="Center" Text="!" Foreground="White" TextAlignment ="Center" FontSize="52" FontWeight="UltraBold"/>
            <Ellipse HorizontalAlignment="Stretch" VerticalAlignment ="Stretch" x:Name ="Highlight" StrokeThickness ="3" Stroke ="Transparent">
              <Ellipse.Fill>
                <DrawingBrush>
                  <DrawingBrush.Drawing>
                    <GeometryDrawing>
                      <GeometryDrawing.Brush>
                        <LinearGradientBrush Opacity ="0.6" StartPoint ="0,0" EndPoint ="0,1">
                          <GradientStop Color ="White" Offset ="0"/>
                          <GradientStop Color ="#CCFFFFFF" Offset ="1"/>
                        </LinearGradientBrush>
                      </GeometryDrawing.Brush>
                      <GeometryDrawing.Geometry>
                        <EllipseGeometry Center ="0.5,0.5" RadiusX ="0.25" RadiusY ="0.5"/>
                      </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                  </DrawingBrush.Drawing>
                  <DrawingBrush.RelativeTransform>
                    <ScaleTransform CenterX ="0.5" CenterY ="0" ScaleX ="1.05" ScaleY ="0.6"/>
                  </DrawingBrush.RelativeTransform>
                </DrawingBrush>
              </Ellipse.Fill>
            </Ellipse>
          </Grid>
          <Button Click="MessageClosed" HorizontalAlignment="Right" VerticalAlignment="Bottom" DockPanel.Dock="Bottom" Content="Ok">
          </Button>
          <TextBlock x:Name="MessageText" Text="" Margin="15" Foreground="Black" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" TextWrapping="WrapWithOverflow">
          </TextBlock>
        </DockPanel>
      </Expander>
      <Expander x:Name="WaitExpander" HorizontalAlignment="Center" VerticalAlignment="Center" IsExpanded="True" Header="Please Wait">
        <StackPanel Margin="25" VerticalAlignment="Center">
          <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Width="80" Height="20">
            <Rectangle StrokeThickness="1" Stroke ="DarkBlue"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
              <Rectangle.Fill>
                <LinearGradientBrush StartPoint ="0,0" EndPoint ="0,1">
                  <GradientStop Color ="LightSkyBlue" Offset ="0"/>
                  <GradientStop Color ="Blue" Offset ="0.5"/>
                  <GradientStop Color ="LightSkyBlue" Offset ="1"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
              <Rectangle.Fill>
                <LinearGradientBrush Opacity ="0.6" StartPoint ="0,0" EndPoint ="0,1">
                  <GradientStop Color ="White" Offset ="0"/>
                  <GradientStop Color ="#CCFFFFFF" Offset ="0.5"/>
                  <GradientStop Color ="Transparent" Offset ="0.51"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <Rectangle Stroke="Transparent" StrokeThickness="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
              <Rectangle.Fill>
                <LinearGradientBrush SpreadMethod="Reflect" Opacity ="0.4" StartPoint ="0,0" EndPoint ="0.5,0">
                  <GradientStop Color ="White" Offset ="0"/>
                  <GradientStop Color ="White" Offset ="0.2"/>
                  <GradientStop Color ="Transparent" Offset ="0.8"/>
                  <GradientStop Color ="Transparent" Offset ="1"/>
                  <LinearGradientBrush.RelativeTransform>
                    <TranslateTransform X="0" Y="0"/>
                  </LinearGradientBrush.RelativeTransform>
                </LinearGradientBrush>
              </Rectangle.Fill>
              <Rectangle.Triggers>
                <EventTrigger RoutedEvent="Rectangle.Loaded">
                  <EventTrigger.Actions>
                    <BeginStoryboard>
                      <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Fill.RelativeTransform.X" From="0" To="1" Duration="0:0:4" RepeatBehavior="Forever"/>
                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger.Actions>
                </EventTrigger>
              </Rectangle.Triggers>
            </Rectangle>
          </Grid>
          <TextBlock Margin="5" DockPanel.Dock="Bottom" Foreground="Black" FontSize="14" FontWeight="Bold" HorizontalAlignment="Center">Working...</TextBlock>
        </StackPanel>
      </Expander>
    </Grid>
  </Grid>
</Window>